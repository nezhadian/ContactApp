<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:adonis="clr-namespace:AdonisUI;assembly=AdonisUI"
    xmlns:adonisConverters="clr-namespace:AdonisUI.Converters;assembly=AdonisUI"
    xmlns:controls="clr-namespace:ContactApp.Controls"
    xmlns:viewModel="clr-namespace:ContactApp.ViewModels">

    <!--  Profile Picture Template  -->
    <DataTemplate x:Key="ContactCollection.ProfilePicture">
        <Border
            Width="{StaticResource ContactCollection.ProfilePictureDimension}"
            Height="{StaticResource ContactCollection.ProfilePictureDimension}"
            Margin="4,5"
            Background="{Binding ProfilePicture}"
            CornerRadius="{StaticResource ContactCollection.ProfilePictureCornerRadius}">

            <TextBlock
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                FontSize="16"
                Foreground="{DynamicResource ContactCollection.Colors.ProfilePictureTextColor}"
                Text="FN" />
        </Border>
    </DataTemplate>

    <!--  First and Last Name Template  -->
    <DataTemplate x:Key="ContactCollection.FirstAndLastName">
        <StackPanel
            Margin="5,0"
            VerticalAlignment="Center"
            Orientation="Horizontal">
            <TextBlock
                FontSize="14"
                FontWeight="Medium"
                Text="{Binding FirstName}" />
            <TextBlock
                Margin="5,0,0,0"
                VerticalAlignment="Bottom"
                FontSize="12"
                Text="{Binding LastName}" />
        </StackPanel>
    </DataTemplate>

    <!--  IsFavorite Template  -->
    <Style x:Key="ContactCollection.IsFavoriteCheckBox" TargetType="CheckBox">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Border Background="{TemplateBinding Background}" CornerRadius="{StaticResource IconButtonStyle.CornerRadius}">
                        <Path
                            x:Name="icon"
                            Width="18"
                            Data="{StaticResource IconGeometries.Heart}"
                            Fill="{DynamicResource ContactCollection.Colors.UnSelectedHeart}"
                            Stretch="Uniform" />
                    </Border>


                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="icon" Property="Fill" Value="{DynamicResource ContactCollection.Colors.Heart}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource IconButton.Hover}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource IconButton.Pressed}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="ContactCollection.IsFavoriteCellStyle"
        BasedOn="{StaticResource {x:Type DataGridCell}}"
        TargetType="DataGridCell">
        <Setter Property="Padding" Value="10" />
        <Setter Property="Visibility" Value="Collapsed" />
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Visibility" Value="Visible" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  Details Template  -->
    <Style
        x:Key="ContactCollection.ExpanderStyle"
        BasedOn="{StaticResource {x:Type Expander}}"
        TargetType="Expander">
        <Setter Property="Foreground" Value="{DynamicResource ContactCollection.Colors.TitlesColor}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontWeight" Value="500" />
        <Setter Property="IsExpanded" Value="True" />
    </Style>
    <DataTemplate x:Key="ContactCollection.RowDetailsTemplate">
        <Grid Margin="0,5,0,15">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="auto" />
            </Grid.RowDefinitions>

            <StackPanel>
                <controls:TitleContentControl Title="{DynamicResource ContactCollection.Texts.FirstName}" Content="{Binding FirstName}" />
                <controls:TitleContentControl Title="{DynamicResource ContactCollection.Texts.LastName}" Content="{Binding LastName}" />
                <Expander
                    Margin="0,10,0,0"
                    Content="{Binding EmailsViewModel}"
                    Header="{DynamicResource ContactCollection.Texts.EmailsHeader}"
                    Style="{StaticResource ContactCollection.ExpanderStyle}" />

                <Expander
                    Margin="0,10,0,0"
                    Content="{Binding NumbersViewModel}"
                    Header="{DynamicResource ContactCollection.Texts.NumbersHeader}"
                    Style="{StaticResource ContactCollection.ExpanderStyle}" />
            </StackPanel>

            <Grid Grid.Row="1" Margin="10,10,10,0">
                <Button
                    HorizontalAlignment="Right"
                    Command="{x:Static viewModel:ContactViewModel.StaticDeleteSelectedItemCommand}"
                    Style="{StaticResource IconButtonStyle}">
                    <Path
                        Width="14"
                        Data="{StaticResource IconGeometries.Delete}"
                        Fill="{DynamicResource ContactCollection.Colors.DeleteBinColor}"
                        Stretch="Uniform" />
                </Button>
                <Button
                    HorizontalAlignment="Center"
                    Command="{x:Static viewModel:ContactViewModel.EditSelectedItem}"
                    Style="{StaticResource IconTextButton.Style}">
                    <controls:IconTextContent
                        Content="{DynamicResource ContactCollection.Texts.EditButtonText}"
                        IconBrush="{DynamicResource IconTextButton.TextColor}"
                        IconData="{StaticResource IconGeometries.Edit}"
                        IconWidth="14" />
                </Button>
            </Grid>
        </Grid>
    </DataTemplate>

    <!--  Items Container Style  -->
    <Style BasedOn="{StaticResource {x:Type DataGridCell}}" TargetType="DataGridCell">
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static adonis:Brushes.ForegroundBrush}}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ContactCollection.DataGridItemContainer" TargetType="DataGridRow">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static adonis:Brushes.ForegroundBrush}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ContactCollection.Colors.DataGridHorizontalLineColor}" />
        <Setter Property="BorderThickness" Value="0,0,0,1" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridRow">
                    <Border
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <SelectiveScrollingGrid>
                            <SelectiveScrollingGrid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </SelectiveScrollingGrid.RowDefinitions>

                            <DataGridCellsPresenter
                                Grid.Row="0"
                                ItemsPanel="{TemplateBinding ItemsPanel}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                            <DataGridDetailsPresenter
                                Grid.Row="1"
                                SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                Visibility="{TemplateBinding DetailsVisibility}" />

                        </SelectiveScrollingGrid>

                    </Border>

                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="false" />
                                <Condition Property="IsMouseOver" Value="true" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="Background" Value="{DynamicResource {x:Static adonis:Brushes.Layer1HighlightBrush}}" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>

                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{DynamicResource ContactCollection.Colors.ItemsDetailBackgroundColor}" />
                            <Setter Property="BorderThickness" Value="0" />
                            <Setter Property="Padding" Value="0,5,0,0" />
                        </Trigger>


                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate DataType="{x:Type viewModel:ContactViewModel}">
        <Grid>
            <Grid.Resources>
                <CollectionViewSource x:Key="ContactCollectionView" Source="{Binding ItemsCollection}" />
            </Grid.Resources>

            <DataGrid
                AutoGenerateColumns="False"
                CanUserAddRows="False"
                GridLinesVisibility="None"
                HeadersVisibility="None"
                ItemContainerStyle="{StaticResource ContactCollection.DataGridItemContainer}"
                ItemsSource="{Binding Source={StaticResource ContactCollectionView}}"
                RowDetailsTemplate="{StaticResource ContactCollection.RowDetailsTemplate}"
                RowDetailsVisibilityMode="VisibleWhenSelected"
                SelectedItem="{Binding SelectedItem, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                SelectionMode="Single">

                <DataGrid.Columns>
                    <!--  Profile Picture  -->
                    <DataGridTemplateColumn CellTemplate="{StaticResource ContactCollection.ProfilePicture}" IsReadOnly="True" />

                    <!--  First and Last Name  -->
                    <DataGridTemplateColumn
                        Width="*"
                        CellTemplate="{StaticResource ContactCollection.FirstAndLastName}"
                        IsReadOnly="True" />

                    <!--  IsFavorite  -->
                    <DataGridCheckBoxColumn
                        Width="50"
                        Binding="{Binding IsFavorite}"
                        CellStyle="{StaticResource ContactCollection.IsFavoriteCellStyle}"
                        ElementStyle="{StaticResource ContactCollection.IsFavoriteCheckBox}"
                        IsReadOnly="True" />
                </DataGrid.Columns>
            </DataGrid>
        </Grid>
    </DataTemplate>

</ResourceDictionary>